apply plugin: 'com.android.application'

//获取版本号
def verCode() {
    def versionPropsFile = file("../version.properties")
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        def int verCode = versionProps['VERSION_CODE'].toInteger()
        return verCode;
    } else {
        throw new GradleException("Could not read gradle.properties")
    }
}

//获取版本名
def verName() {
    def versionPropsFile = file("../version.properties")
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        return versionProps['VERSION_NAME']
    } else {
        throw new GradleException("Could not read gradle.properties")
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.tangxb.pay.hero"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode verCode()
        versionName verName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    //recommend
    dexOptions {
        jumboMode = true
    }

    signingConfigs {
        tinker {
            v1SigningEnabled true
            v2SigningEnabled true
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(KEY_FILE_PATH)
            storePassword KEY_STORE_PASSWORD
        }
    }

    productFlavors {
        wandoujia {}
        market360 {}
        xiaomi {}
        tencent {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_APPKEY: project.UMENG_APPKEY, UMENG_CHANNEL_VALUE: name]
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.tinker
            buildConfigField("boolean", "LOG_DEBUG", "true")
            buildConfigField("boolean", "IS_DEBUG", "true")
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.tinker
            buildConfigField("boolean", "LOG_DEBUG", "false")
            buildConfigField("boolean", "IS_DEBUG", "false")
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    compile 'com.tencent.bugly:crashreport_upgrade:1.3.2'

    // 以下是项目的配置
    compile('com.android.support:appcompat-v7:25.3.1', {
        exclude group: 'com.android.support', module: 'support-media-compat'
        exclude group: 'com.android.support', module: 'support-core-utils'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    })
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile('com.zhy:base-rvadapter:3.0.3', {
        exclude group: 'com.android.support'
    })
    compile('com.chanven.lib:cptr:1.1.0', {
        exclude group: 'com.android.support'
    })
    compile 'com.github.medyo:dynamicbox:1.2@aar'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'de.hdodenhof:circleimageview:2.2.0'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile('pub.devrel:easypermissions:0.4.3', {
        exclude group: 'com.android.support'
    })
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile('com.squareup.retrofit2:retrofit:2.3.0', {
        exclude group: 'com.squareup.okhttp3'
    })
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    // rxandroid
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile 'org.greenrobot:greendao:3.2.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.orhanobut:logger:2.1.1'
    compile 'com.flaviofaria:kenburnsview:1.0.7'
    compile('com.github.niorgai:StatusBarCompat:2.1.4', {
        exclude group: 'com.android.support'
    })
    compile('com.android.support:design:25.3.1', {
        exclude group: 'com.android.support', module: 'transition'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    })
    compile 'com.android.support:cardview-v7:25.3.1'
    compile('me.zhanghai.android.materialprogressbar:library:1.4.1', {
        exclude group: 'com.android.support'
    })
    compile 'me.xiaosai:image_compress:1.0.1'
    compile 'com.aliyun.dpa:oss-android-sdk:+'
    compile 'com.github.promeg:tinypinyin:2.0.3'
    compile 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3'
    compile 'com.lzy.widget:imagepicker:0.6.1'
}

apply plugin: 'org.greenrobot.greendao'
apply from: 'tinker-support.gradle'